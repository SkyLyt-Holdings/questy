// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questy.Data;

namespace Questy.Data.Migrations
{
    [DbContext(typeof(QuestyContext))]
    [Migration("20200512000752_quest-8")]
    partial class quest8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Questy.Domain.Entities.Archetype", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Archetypes");
                });

            modelBuilder.Entity("Questy.Domain.Entities.ArchetypeTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArchetypeID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ArchetypeID");

                    b.HasIndex("TagID");

                    b.ToTable("ArchetypeTag");
                });

            modelBuilder.Entity("Questy.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Questy.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Questy.Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Questy.Domain.Entities.UserBuild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrimaryArchetypeID")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryArchetypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TertiaryArchetypeID")
                        .HasColumnType("int");

                    b.Property<int?>("WeightID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PrimaryArchetypeID");

                    b.HasIndex("SecondaryArchetypeID");

                    b.HasIndex("TertiaryArchetypeID");

                    b.HasIndex("WeightID");

                    b.ToTable("UserBuilds");
                });

            modelBuilder.Entity("Questy.Domain.Entities.UserType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("Questy.Domain.Entities.UserTypePermissions", b =>
                {
                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.Property<int>("PermissionID")
                        .HasColumnType("int");

                    b.HasKey("UserTypeID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("UserTypePermissions");
                });

            modelBuilder.Entity("Questy.Domain.Entities.Weight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrimaryPercentage")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryPercentage")
                        .HasColumnType("int");

                    b.Property<int>("TertiaryPercentage")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("Questy.Domain.Entities.ArchetypeTag", b =>
                {
                    b.HasOne("Questy.Domain.Entities.Archetype", "Archetype")
                        .WithMany("Tags")
                        .HasForeignKey("ArchetypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questy.Domain.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Questy.Domain.Entities.User", b =>
                {
                    b.HasOne("Questy.Domain.Entities.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID");
                });

            modelBuilder.Entity("Questy.Domain.Entities.UserBuild", b =>
                {
                    b.HasOne("Questy.Domain.Entities.Archetype", "PrimaryArchetype")
                        .WithMany()
                        .HasForeignKey("PrimaryArchetypeID");

                    b.HasOne("Questy.Domain.Entities.Archetype", "SecondaryArchetype")
                        .WithMany()
                        .HasForeignKey("SecondaryArchetypeID");

                    b.HasOne("Questy.Domain.Entities.Archetype", "TertiaryArchetype")
                        .WithMany()
                        .HasForeignKey("TertiaryArchetypeID");

                    b.HasOne("Questy.Domain.Entities.Weight", "Weight")
                        .WithMany()
                        .HasForeignKey("WeightID");
                });

            modelBuilder.Entity("Questy.Domain.Entities.UserTypePermissions", b =>
                {
                    b.HasOne("Questy.Domain.Entities.Permission", "Permission")
                        .WithMany("UserTypes")
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questy.Domain.Entities.UserType", "UserType")
                        .WithMany("Permissions")
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
